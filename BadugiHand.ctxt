#BlueJ class context
comment0.params=cards
comment0.target=BadugiHand(java.util.List)
comment0.text=\n\ The\ constructor\ to\ create\ a\ hand\ from\ given\ list\ of\ cards.\n\ @param\ cards\ The\ cards\ that\ make\ up\ this\ badugi\ hand.\n
comment1.params=cards
comment1.target=BadugiHand(java.lang.String)
comment10.params=c1\ c2
comment10.target=int\ compare(java.util.List,\ java.util.List)
comment10.text=\n\ A\ utility\ function\ to\ compare\ two\ lists\ of\ active\ badugi\ cards.\n\ @param\ c1\ The\ first\ list\ of\ cards\ in\ this\ comparison.\n\ @param\ c2\ The\ second\ list\ of\ cards\ in\ this\ comparison.\n\ @return\ The\ result\ of\ the\ comparison\ as\ an\ int\ whose\ sign\ determines\ the\ order.\n
comment11.params=toReplace\ deck
comment11.target=void\ replaceCard(Card,\ EfficientDeck)
comment11.text=\n\ Replace\ one\ card\ from\ this\ hand\ with\ another\ card\ drawn\ from\ the\ given\ deck.\n\ @param\ toReplace\ The\ card\ in\ this\ hand\ that\ is\ to\ be\ replaced\ with\ a\ drawn\ card.\n\ @param\ deck\ The\ deck\ from\ which\ the\ new\ card\ is\ drawn.\n
comment12.params=idx\ buildHand\ bestSoFar
comment12.target=void\ backtrack(int,\ java.util.List,\ java.util.List)
comment13.params=
comment13.target=void\ test()
comment2.params=
comment2.target=void\ updateActiveHand()
comment3.params=c1\ c2
comment3.target=int\ compare(Card,\ Card)
comment4.params=
comment4.target=java.lang.String\ toString()
comment4.text=\n\ The\ string\ representation\ of\ this\ hand.\n\ @return\ The\ string\ representation\ of\ this\ hand.\n
comment5.params=
comment5.target=java.util.List\ getAllCards()
comment5.text=\n\ Get\ the\ list\ of\ all\ four\ cards\ in\ this\ hand.\n\ @return\ An\ unmodifiable\ view\ to\ the\ four\ cards\ in\ this\ hand.\n
comment6.params=
comment6.target=java.util.List\ getActiveCards()
comment6.text=\n\ Get\ the\ list\ of\ the\ active\ badugi\ cards\ in\ this\ hand.\n\ @return\ An\ unmodifiable\ view\ to\ the\ active\ badugi\ cards\ in\ this\ hand.\n\ A\ card\ is\ considered\ active\ if\ it\ is\ part\ of\ the\ best\ badugi\ hand\ that\n\ can\ be\ made\ out\ of\ the\ four\ cards\ that\ comprise\ the\ entire\ hand.\n
comment7.params=
comment7.target=java.util.List\ getInactiveCards()
comment7.text=\n\ Get\ the\ list\ of\ cards\ in\ this\ hand\ that\ are\ not\ active\ in\ the\ badugi\ hand.\n\ @return\ The\ list\ of\ the\ inactive\ badugi\ cards\ in\ this\ hand.\n
comment8.params=
comment8.target=int[]\ getActiveRanks()
comment8.text=\n\ Get\ an\ array\ of\ ranks\ of\ the\ active\ badugi\ cards\ in\ this\ hand,\ suitable\ for\n\ the\ needs\ of\ the\ AI\ agents\ to\ evaluate\ the\ power\ of\ this\ hand.\n
comment9.params=other
comment9.target=int\ compareTo(BadugiHand)
comment9.text=\n\ The\ order\ comparison\ between\ the\ two\ badugi\ hands.\n\ @param\ other\ The\ other\ badugi\ hand\ in\ this\ comparison\n\ @return\ The\ result\ of\ the\ comparison\ as\ an\ int\ whose\ sign\ determines\ the\ order.\n\ Any\ positive\ number\ means\ that\ this\ hand\ is\ better,\ any\ negative\ number\ means\ that\n\ the\ other\ hand\ is\ better,\ and\ result\ zero\ means\ that\ the\ hands\ are\ equal\ value.\n
numComments=14
